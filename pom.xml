<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2015 Red Hat, Inc. and/or its affiliates.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kie</groupId>
    <artifactId>kie-parent</artifactId>
    <version>7.6.0-SNAPSHOT</version>
    <relativePath/>
  </parent>

  <groupId>org.uberfire</groupId>
  <artifactId>uberfire-parent</artifactId>
  <packaging>pom</packaging>

  <name>UberFire parent</name>
  <description>
    The parent contains all metadata (including plugins) and also dependency versions. All UberFire modules
    should (transitively) inherit from this POM.
  </description>
  <inceptionYear>2012</inceptionYear>
  <organization>
    <name>JBoss by Red Hat</name>
    <url>http://www.jboss.org/</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <appformer.version>${project.version}</appformer.version>
    <version.org.kie>${project.version}</version.org.kie>
    <version.org.kie.soup>${version.org.kie}</version.org.kie.soup>

    <!-- TODO fix all the modules to have all direct dependencies specified, then remove this property -->
    <illegaltransitivereportonly>true</illegaltransitivereportonly>

    <version.org.uberfire.latestFinal.release>1.4.0.Final</version.org.uberfire.latestFinal.release>
    <revapi.oldUberFireVersion>${version.org.uberfire.latestFinal.release}</revapi.oldUberFireVersion>
    <revapi.newUberFireVersion>${project.version}</revapi.newUberFireVersion>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:kiegroup/appformer.git</connection>
    <developerConnection>scm:git:git@github.com:kiegroup/appformer.git</developerConnection>
    <url>https://github.com/kiegroup/appformer</url>
  </scm>
  <issueManagement>
    <system>jira</system>
    <url>https://issues.jboss.org/browse/AF</url>
  </issueManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <org.uberfire.nio.git.daemon.enabled>false</org.uberfire.nio.git.daemon.enabled>
              <org.uberfire.nio.git.ssh.enabled>false</org.uberfire.nio.git.ssh.enabled>
              <org.uberfire.sys.repo.monitor.disabled>true</org.uberfire.sys.repo.monitor.disabled>
              <org.uberfire.nio.git.dir>${project.build.directory}</org.uberfire.nio.git.dir>
              <apple.awt.UIElement>true</apple.awt.UIElement>
            </systemPropertyVariables>
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <excludes>
              <exclude>**/*IntegrationTest.java</exclude>
            </excludes>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*IntegrationTest.java</include>
            </includes>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <!-- Important: do not remove the lifecycle-mapping plugin version (even if already coming from parent)!
               This is to workaround bug in Eclipse m2e: https://bugs.eclipse.org/bugs/show_bug.cgi?id=371618 -->
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <versionRange>[1.7,)</versionRange>
                    <goals>
                      <goal>parse-version</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore/>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.3.0,)</versionRange>
                    <goals>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute/>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>

      </plugins>

    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}</directory>
              <includes>
                <include>src/main/webapp/WEB-INF/deploy/</include>
                <include>src/main/webapp/WEB-INF/classes/</include>
                <include>src/main/webapp/WEB-INF/lib/</include>
                <include>.errai/</include>
                <include>.niogit/**</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <!-- TODO merge this with kie-parent -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>org/uberfire/build/uberfire_checks.xml</configLocation>
          <headerLocation>org/uberfire/build/uberfire_license_header.txt</headerLocation>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>fullProfile</id>
      <activation>
        <property>
          <name>full</name>
        </property>
      </activation>
      <modules>
        <module>uberfire-distro</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.commonjava.maven.plugins</groupId>
            <artifactId>project-sources-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>graph</id>
      <build>
        <plugins>
          <!-- Important: you need to have Graphviz installed on your system to make the plugin work! -->
          <plugin>
            <groupId>org.fusesource.mvnplugins</groupId>
            <artifactId>maven-graph-plugin</artifactId>
            <version>1.38</version>
            <executions>
              <execution>
                <id>dependency-graph-reactor</id>
                <phase>install</phase>
                <goals>
                  <goal>reactor</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <hideExternal>true</hideExternal>
            </configuration>
          </plugin>
          <!-- Copied from kie-parent -->
          <plugin>
            <groupId>org.revapi</groupId>
            <artifactId>revapi-maven-plugin</artifactId>
            <version>0.8.1</version>
            <dependencies>
              <dependency>
                <groupId>org.revapi</groupId>
                <artifactId>revapi-java</artifactId>
                <version>0.13.1</version>
              </dependency>
            </dependencies>
            <configuration>
              <oldArtifacts>
                <artifact>${project.groupId}:${project.artifactId}:${revapi.oldUberFireVersion}</artifact>
              </oldArtifacts>
              <newArtifacts>
                <artifact>${project.groupId}:${project.artifactId}:${revapi.newUberFireVersion}</artifact>
              </newArtifacts>
              <!-- By default revapi will check the oldArtifact against the currently executed build -->
              <analysisConfigurationFiles>
                <configurationFile>
                  <path>src/build/revapi-config.json</path>
                  <roots>
                    <root>filters</root>
                    <root>ignores</root>
                  </roots>
                </configurationFile>
              </analysisConfigurationFiles>
              <!-- By default, revapi will only fail the build if there are potentially breaking or breaking changes. However, in the report
                   we want even non breaking changes to be present. -->
              <reportSeverity>nonBreaking</reportSeverity>
              <failSeverity>potentiallyBreaking</failSeverity>
            </configuration>
            <!-- Running two executions is a workaround to make sure we get a HTML report in case revapi finds
                 some incompatible changes. The "check" goal will simply fail the whole build before it could get
                 to the report. To make sure we always get a HTML report, the "report" goal needs to be executed
                 before the "check" goal.
                 Once https://github.com/revapi/revapi/issues/11 is fixed it should be possible to use single execution. -->
            <executions>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
              </execution>
              <execution>
                <!-- report can be found in ${build.directory}/site/revapi-report.html -->
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <modules>
    <module>uberfire-archetype</module>
    <module>uberfire-commons</module>
    <module>uberfire-api</module>
    <module>uberfire-client-api</module>
    <module>uberfire-security</module>
    <module>uberfire-nio2-backport</module>
    <module>uberfire-io</module>
    <module>uberfire-server</module>
    <module>uberfire-backend</module>
    <module>uberfire-js</module>
    <module>uberfire-testing-utils</module>
    <module>uberfire-workbench</module>
    <module>uberfire-packaging</module>
    <module>uberfire-preferences</module>
    <module>uberfire-extensions</module>
    <module>uberfire-asset-mgmt</module>
    <module>uberfire-m2repo-editor</module>
    <module>uberfire-message-console</module>
    <module>uberfire-organizationalunit-manager</module>
    <module>uberfire-project</module>
    <module>uberfire-rest</module>
    <module>uberfire-services</module>
    <module>uberfire-structure</module>
    <module>uberfire-test-utils</module>
    <module>uberfire-workingset</module>
    <module>uberfire-showcase</module>
    <module>dashbuilder</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.appformer</groupId>
        <artifactId>appformer-bom</artifactId>
        <!-- Using ${appformer.version} instead of ${project.version} enables easier way to create hot fixes
             (one-off patches). This pom is a parent for all uberfire modules, so when version is changed in
             one of them, the ${project.version} property changes too and therefore also required version of
             appformer-bom. Usage of  this property makes it possible to change version of the (sub)module
             and still use the original version of appformer-bom. -->
        <version>${appformer.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.kie.soup</groupId>
        <artifactId>kie-soup-bom</artifactId>
        <version>${version.org.kie.soup}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- XXX Maybe add below to kie-parent? -->
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>${version.javax.enterprise}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.scannotation</groupId>
        <artifactId>scannotation</artifactId>
        <version>${version.org.scannotation}</version>
        <exclusions>
          <!-- Uses old javassist groupId so Maven is not able to exclude this itself. All UF modules have to use
               org.javassist:javassist instead of this one. -->
          <exclusion>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- DistributionManagement is inherited from org.jboss:jboss-parent -->
  <!-- <distributionManagement/> -->

</project>
